#N canvas 579 51 578 807 10;
#X obj 6 724 cnv 15 552 21 empty empty empty 20 12 0 14 -233017 -33289
0;
#X obj 6 547 cnv 3 550 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#N canvas 615 283 356 243 META 0;
#X text 1 19 LICENSE SIBSD;
#X text 1 114 LIBRARY cyclone;
#X text 1 95 OUTLET_0 signal;
#X text 1 0 KEYWORDS signal sample hold arpeggiator;
#X text 1 76 INLET_1 signal;
#X text 1 57 INLET_0 signal float;
#X text 1 38 DESCRIPTION sample-and-hold;
#X text 0 134 VERSION 0.2-beta1;
#X text 0 152 AUTHOR Krzysztof Czaja;
#X text 1 170 RELEASE_DATE 2002;
#X text 2 189 WEBSITE http://suita.chopin.edu.pl/~czaja/miXed/externs/cyclone.html
;
#X text 2 221 HELP_PATCH_AUTHORS Christoph Kummerer. Revised by Jonathan
Wilkes for Pd-extended 0.42 to conform to the PDDP template. Alex Cleveland
updated this patch for Pd-l2ork version 2013.05.28. Fred Jan Kraan
adapted the patch to pd-extended 2015-02-02;
#X restore 506 726 pd META;
#X obj 6 635 cnv 3 550 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 6 682 cnv 3 550 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#N canvas 311 415 428 109 Related_objects 0;
#X obj 0 0 cnv 15 425 20 empty empty empty 3 12 0 14 -204280 -1 0;
#X text 6 1 Related Objects;
#X restore 205 726 pd Related_objects;
#X obj 86 557 cnv 17 3 34 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 86 645 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 6 38 cnv 15 552 40 empty empty sah~ 3 12 0 18 -204280 -1 0;
#X obj 515 46 sah~;
#X text 115 555 signal;
#X obj 86 606 cnv 17 3 17 empty empty 1 5 9 0 16 -228856 -162280 0
;
#X text 115 605 signal;
#X text 115 645 signal;
#X text 97 693 1) float;
#X text 115 575 float;
#X text 16 61 Sample and hold a signal according to a trigger signal
;
#X text 186 605 - trigger signal;
#X text 186 576 - set treshold value;
#N canvas 220 68 565 722 arpeggiator 0;
#X obj 126 485 cyclone/cycle~;
#X obj 97 529 output~;
#X obj 0 0 cnv 15 552 40 empty empty empty 3 12 0 18 -204280 -1 0;
#X floatatom 96 258 0 0 0 0 - - -;
#X floatatom 261 247 5 0 0 0 - - -, f 5;
#X obj 264 223 hsl 128 15 50 150 0 0 empty empty empty -2 -8 0 10 -228856
-1 -1 0 1;
#X obj 99 235 hsl 128 15 15 25 0 0 empty empty empty -2 -8 0 10 -228856
-1 -1 0 1;
#X obj 287 337 cyclone/Scope~ 103 89 35 3 128 0 1 0 0 0 0 102 255 51
135 135 135 0 98 102 0;
#X obj 286 434 cyclone/Scope~ 103 89 35 3 128 0 1 0 0 0 0 102 255 51
135 135 135 0 98 102 0;
#X obj 126 343 cyclone/sah~;
#X obj 126 433 expr~ $v1 * 800 + 200;
#X text 57 457 freq range: 200Hz-1000Hz;
#X text 313 310 phasor~;
#X text 291 535 sampled & held;
#X text 310 549 phasor~;
#X text 397 515 0;
#X text 397 429 1;
#X text 397 416 0;
#X text 397 333 1;
#X obj 96 287 phasor~ 20;
#X obj 261 270 cyclone/train~ 77;
#X text 73 60 here we're passing the signal of a [phasor~] \, which
is a periodic ramp from 0-1 \, through the [sah~] object. The trigger
signal is from the [train~] object \, which goes from 0 to 1 at a period
fiven in ms \, and from 1 to 0 at half this period. When [train~] goes
from 0 to 1 \, it triggers the [sah~] object.;
#X text 74 148 when the period of the [phasor~] and [train~] are out
of synchrony \, you may get interesting arpeggio effects. You can try
other waveforms for the input to the [sah~].;
#X text 18 11 the sample and hold arpeggiator;
#X text 63 598 The [samphold~] object in Pd vanilla was not designed
to work with a trigger signal \, but with a [phasor~]. On the other
hand \, [sah~] doesn't work well at synchronizing with a [phasor~]
\, it works better synchronizing with a signal like a square wave \,
or an impulse \, hence we're using [train~] to trigger it on the example
on the left.;
#X connect 0 0 1 0;
#X connect 0 0 1 1;
#X connect 3 0 19 0;
#X connect 4 0 20 0;
#X connect 5 0 4 0;
#X connect 6 0 3 0;
#X connect 9 0 10 0;
#X connect 9 0 8 0;
#X connect 10 0 0 0;
#X connect 19 0 9 0;
#X connect 19 0 7 0;
#X connect 20 0 9 1;
#X restore 184 510 pd arpeggiator example;
#X text 186 645 - sampled and held signal according to trigger signal
;
#X text 186 694 - threshold value (default 0);
#X floatatom 194 289 8 0 0 0 - - -, f 8;
#X obj 132 275 noise~;
#X obj 132 393 cyclone/cycle~;
#X obj 104 432 output~;
#X obj 287 282 cyclone/triangle~ 1;
#X obj 287 332 cyclone/snapshot~ 1;
#X obj 287 363 vsl 20 70 -1 1 0 0 empty empty empty 0 -9 0 10 -249661
-1 -1 2026 1;
#X obj 287 259 phasor~ 0.7;
#X obj 328 363 vsl 20 70 -0.99 0.99 0 0 empty empty empty 0 -9 0 10
-228856 -1 -1 0 1;
#X obj 194 262 r \$0-thresh;
#X obj 328 442 s \$0-thresh;
#X obj 132 362 expr~ $v1 * 300 + 800;
#X text 87 201 Sample and hold random values from a noise input \,
rescaled to 500 - 1100 Hz range:;
#X text 308 428 -1;
#X text 313 354 1;
#X text 314 391 0;
#X text 186 556 - input signal to sample and hold;
#X text 362 394 <= set threshold;
#X text 300 305 <= trigger signal;
#X text 85 101 when a trigger signal raises above a given threshold
\, [sah~] captures a value ("samples") from the input and continually
outputs it ("hold") until another value is sampled and held (when the
trigger signal rises again above the threshold after having dropped
below it). This usually synchronizes one signal to the behavior of
another.;
#X text 72 300 input =>;
#X obj 132 325 cyclone/sah~ -0.5;
#N canvas 439 241 715 321 (subpatch) 0;
#X obj 51 51 cnv 15 552 28 empty empty Cyclone: 6 13 0 18 -128992 -233080
0;
#X obj 217 65 cnv 5 5 5 empty empty Library 0 0 0 12 -128992 -233080
0;
#X obj 275 65 cnv 5 5 5 empty empty of 0 0 0 12 -128992 -233080 0;
#X obj 298 64 cnv 5 5 5 empty empty objects 0 0 0 12 -128992 -233080
0;
#X obj 356 64 cnv 5 5 5 empty empty cloned 0 0 0 12 -128992 -233080
0;
#X obj 406 64 cnv 5 5 5 empty empty from 0 0 0 12 -128992 -233080 0
;
#X obj 444 64 cnv 5 5 5 empty empty Max/MSP 0 0 0 12 -128992 -233080
0;
#X coords 0 -1 1 1 554 30 1 50 50;
#X restore 5 3 pd;
#N canvas 673 40 366 264 (subpatch) 0;
#X obj 51 101 tgl 42 0 \$0-tgl-s \$0-tgl-r empty 1 8 1 9 -74965 -212593
-262144 1 1;
#X obj 215 68 route dsp;
#X obj 215 37 receive pd;
#N canvas 939 367 324 271 set_color 0;
#X obj 47 30 inlet;
#X obj 96 146 s \$0-cnv;
#X msg 96 114 color -4.86997e+06 -1.34937e+07;
#N canvas 0 22 712 637 off 0;
#X obj 490 220 * -1;
#X obj 424 300 +;
#X obj 409 325 +;
#X obj 347 219 * -65536;
#X obj 424 220 * -256;
#X obj 409 356 - 1;
#X obj 390 189 unpack f f f;
#X obj 225 295 +;
#X obj 210 320 +;
#X obj 148 214 * -65536;
#X obj 225 215 * -256;
#X obj 291 215 * -1;
#X obj 210 351 - 1;
#X obj 191 184 unpack f f f;
#X obj 379 423 pack;
#X msg 378 447 color \$1 \$2;
#X msg 395 152 124 124 124;
#X msg 203 154 220 220 220;
#X obj 238 121 t b b;
#X obj 238 81 inlet;
#X obj 378 485 outlet;
#X connect 0 0 1 1;
#X connect 1 0 2 1;
#X connect 2 0 5 0;
#X connect 3 0 2 0;
#X connect 4 0 1 0;
#X connect 5 0 14 1;
#X connect 6 0 3 0;
#X connect 6 1 4 0;
#X connect 6 2 0 0;
#X connect 7 0 8 1;
#X connect 8 0 12 0;
#X connect 9 0 8 0;
#X connect 10 0 7 0;
#X connect 11 0 7 1;
#X connect 12 0 14 0;
#X connect 13 0 9 0;
#X connect 13 1 10 0;
#X connect 13 2 11 0;
#X connect 14 0 15 0;
#X connect 15 0 20 0;
#X connect 16 0 6 0;
#X connect 17 0 13 0;
#X connect 18 0 17 0;
#X connect 18 1 16 0;
#X connect 19 0 18 0;
#X restore 47 113 pd off;
#X obj 47 83 select 0 1;
#X obj 47 168 list append 0;
#X obj 47 195 list trim;
#X obj 47 220 s \$0-tgl-r;
#X connect 0 0 4 0;
#X connect 2 0 1 0;
#X connect 2 0 5 0;
#X connect 3 0 1 0;
#X connect 3 0 5 0;
#X connect 4 0 3 0;
#X connect 4 1 2 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X restore 215 165 pd set_color;
#X obj 135 122 r \$0-tgl-s;
#N canvas 0 22 450 300 (subpatch) 0;
#X obj 101 101 cnv 25 40 25 empty \$0-cnv DSP 3 13 0 20 -74965 -212593
0;
#X coords 0 -1 1 1 42 27 1 100 100;
#X restore 51 144 pd;
#X obj 226 139 s \$0-tgl-r;
#X msg 226 115 set \$1;
#X msg 135 177 \; pd dsp \$1;
#N canvas 256 32 278 194 load_check 0;
#X obj 136 53 sig~ 1;
#X obj 74 24 loadbang;
#X obj 136 86 snapshot~;
#X obj 91 52 del 5;
#X obj 136 151 outlet;
#X obj 74 103 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 74 126 switch~;
#X connect 0 0 2 0;
#X connect 1 0 3 0;
#X connect 1 0 5 0;
#X connect 2 0 4 0;
#X connect 3 0 2 0;
#X connect 3 0 5 0;
#X connect 5 0 6 0;
#X restore 51 72 pd load_check;
#X connect 1 0 3 0;
#X connect 1 0 7 0;
#X connect 2 0 1 0;
#X connect 4 0 8 0;
#X connect 4 0 3 0;
#X connect 7 0 6 0;
#X connect 9 0 0 0;
#X coords 0 -1 1 1 44 72 2 50 100;
#X restore 503 87 pd;
#X connect 22 0 43 0;
#X connect 23 0 43 0;
#X connect 24 0 25 0;
#X connect 24 0 25 1;
#X connect 26 0 27 0;
#X connect 26 0 43 1;
#X connect 27 0 28 0;
#X connect 29 0 26 0;
#X connect 30 0 32 0;
#X connect 31 0 22 0;
#X connect 33 0 24 0;
#X connect 43 0 33 0;
