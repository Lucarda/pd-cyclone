#N canvas 453 58 558 593 10;
#X obj 2 4 cnv 15 553 42 empty empty empty 20 12 0 14 -233017 -66577
0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 554 42 1 0 0;
#X restore 2 3 graph;
#X obj 305 4 cnv 15 250 40 empty empty empty 12 13 0 18 -128992 -233080
0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 304 3 pd;
#X text 64 91 [tri~] generates an anti-aliased triangular wave at a
given frequency. It has a sync input and you can set the variable duty
cycle.;
#X obj 141 170 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X obj 221 148 hsl 128 15 0.01 0.99 0 0 empty empty empty -2 -8 0 10
-228856 -1 -1 0 1;
#X obj 218 171 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X text 118 169 hz;
#X text 245 147 variable duty;
#N canvas 692 59 569 622 antialiasing 0;
#N canvas 232 59 441 363 plot 0;
#X obj 62 33 inlet~;
#X obj 62 88 rfft~;
#X obj 191 185 metro 100;
#X obj 191 162 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X obj 220 235 block~ 4096;
#X obj 191 134 loadbang;
#X obj 62 187 /~ 1024;
#X obj 62 214 rmstodb~;
#X obj 62 241 clip~ 40 100;
#X obj 62 157 cyclone/cartopol~;
#X obj 146 279 tabwrite~ \$0-non-limited;
#X connect 0 0 1 0;
#X connect 1 0 9 0;
#X connect 1 1 9 1;
#X connect 2 0 10 0;
#X connect 3 0 2 0;
#X connect 5 0 3 0;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 8 0 10 0;
#X connect 9 0 6 0;
#X restore 30 205 pd plot;
#X text 499 406 Nyquist;
#X text 31 408 0 Hz;
#X text 501 574 Nyquist;
#X text 33 576 0 Hz;
#X obj 34 284 cnv 15 510 118 empty empty empty 20 12 0 14 -228856 -66577
0;
#X obj 36 452 cnv 15 510 118 empty empty empty 20 12 0 14 -228856 -66577
0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array \$0-non-limited 2048 float 0;
#X coords 0 100 2047 40 512 120 1 0 0;
#X restore 33 283 graph;
#N canvas 0 22 450 300 (subpatch) 0;
#X array \$0-bandlimited 2048 float 0;
#X coords 0 100 2047 40 512 120 1 0 0;
#X restore 35 451 graph;
#X obj 98 126 phasor~ 2000;
#X text 100 104 Aliasing;
#X obj 481 206 switch~;
#X obj 481 128 tgl 50 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X text 480 104 turn on;
#N canvas 232 59 445 362 plot 0;
#X obj 102 33 inlet~;
#X obj 102 88 rfft~;
#X obj 230 226 metro 100;
#X obj 230 203 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X obj 308 145 block~ 4096;
#X obj 230 175 loadbang;
#X obj 102 187 /~ 1024;
#X obj 102 214 rmstodb~;
#X obj 112 251 clip~ 40 100;
#X obj 138 280 tabwrite~ \$0-bandlimited;
#X obj 102 149 cyclone/cartopol~;
#X connect 0 0 1 0;
#X connect 1 0 10 0;
#X connect 1 1 10 1;
#X connect 2 0 9 0;
#X connect 3 0 2 0;
#X connect 5 0 3 0;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 10 0 6 0;
#X restore 247 216 pd plot;
#X obj 309 163 cyclone/tri~ 2000;
#X obj 98 160 cyclone/triangle~ 0.5;
#X obj 224 94 hsl 128 15 0.01 0.99 0 0 empty empty empty -2 -8 0 10
-228856 -1 -1 0 1;
#X obj 221 117 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X text 247 93 variable duty;
#X obj 309 202 ./out~;
#X obj 98 191 ./out~;
#X text 96 19 A perfectly triangular oscillator generates aliasing
(check spectral analisys graphs below). Hence \, it's preferable for
musical purposes a band limited osicllator.;
#X text 317 135 That's better...;
#X connect 9 0 16 0;
#X connect 12 0 11 0;
#X connect 15 0 14 0;
#X connect 15 0 20 0;
#X connect 15 0 20 1;
#X connect 16 0 0 0;
#X connect 16 0 21 0;
#X connect 16 0 21 1;
#X connect 17 0 18 0;
#X connect 18 0 16 1;
#X connect 18 0 15 1;
#X restore 448 270 pd antialiasing;
#N canvas 830 125 450 300 sync 0;
#X obj 213 140 phasor~;
#X obj 213 116 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X obj 320 248 switch~;
#X obj 320 170 tgl 50 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X text 319 146 turn on;
#X obj 120 171 cyclone/tri~ 440;
#X text 51 37 In the third inlet \, you can feed a [phasor~] signal
for oscillator syncing. The frequency from the [phasor~] will be the
master and force [tri~] to be synced as a slave.;
#X obj 96 211 ./out~;
#X connect 0 0 5 2;
#X connect 1 0 0 0;
#X connect 3 0 2 0;
#X connect 5 0 7 0;
#X connect 5 0 7 1;
#X restore 496 294 pd sync;
#X obj 2 557 cnv 15 552 21 empty empty empty 20 12 0 14 -233017 -33289
0;
#X obj 2 326 cnv 3 550 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 2 408 cnv 3 550 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 2 445 cnv 3 550 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X obj 111 420 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 111 336 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X text 139 336 float/signal;
#X obj 112 358 cnv 17 3 17 empty empty 1 5 9 0 16 -228856 -162280 0
;
#X text 139 358 float/signal;
#X obj 112 380 cnv 17 3 17 empty empty 2 5 9 0 16 -228856 -162280 0
;
#X text 175 380 signal;
#X text 173 420 signal;
#X text 233 335 - frequency in hertz;
#X text 235 379 - oscillator sync \, from a [phasor~] signal;
#X text 161 454 1) float;
#X text 161 472 2) float;
#X text 235 472 - pulse width (default 0.5);
#X obj 3 497 cnv 3 550 3 empty empty more_info 8 12 0 13 -228856 -1
0;
#X text 129 504 This is an abstraction (and an extremely CPU hungry
one)!!! A particular behaviour is that if the signal input is 0 \,
the arguments are called.;
#X text 234 357 - variable duty (from 0 to 1);
#X text 235 420 - the bandlimited triangular oscillator output;
#X obj 160 210 cyclone/tri~ 440 0.5;
#X text 235 454 - frequency (default 0);
#X obj 17 56 cyclone/comment 0 18 times ? 0 0 0 0 Bandlimited triangular
oscillator;
#X obj 16 4 cyclone/comment 0 37 times ? 0 0 0 0 tri~;
#X obj 322 28 cyclone/comment 0 13 courier ? 0 224 228 220 Objects
cloned from Max/MSP;
#X obj 363 4 cyclone/comment 0 24 courier ? 0 224 228 220 cyclone;
#X obj 135 255 ./out~;
#X connect 5 0 33 0;
#X connect 6 0 7 0;
#X connect 7 0 33 1;
#X connect 33 0 39 0;
#X connect 33 0 39 1;
